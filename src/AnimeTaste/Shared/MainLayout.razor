@inherits LayoutComponentBase
<Layout Style="height:100vh">
    <Sider @bind-Collapsed=@collapsed NoTrigger>
        <h4 class="logo">A & T</h4>
        <Menu Theme="MenuTheme.Dark" Mode="MenuMode.Inline" DefaultSelectedKeys=@(new[]{"1"})>
            <MenuItem Key="1" RouterLink="/" RouterMatch="NavLinkMatch.All">
                <Icon Type="home" Theme="IconThemeType.Outline" />
                <span>首页</span>
            </MenuItem>
            <MenuItem Key="2" RouterLink="/anime_schedule" RouterMatch="NavLinkMatch.All">
                <Icon Type="schedule" Theme="IconThemeType.Outline" />
                <span>时间表</span>
            </MenuItem>
            <MenuItem Key="3">
                <Icon Type="heart" Theme="IconThemeType.Outline" />
                <span>收藏</span>
            </MenuItem>
            <MenuItem Key="4">
                <Icon Type="database" Theme="IconThemeType.Outline" />
                <span>存储库</span>
            </MenuItem>
            <MenuItem Key="5">
                <Icon Type="fire" Theme="IconThemeType.Outline" />
                <span>排行榜</span>
            </MenuItem>
            <MenuItem Key="6">
                <Icon Type="play-circle" Theme="IconThemeType.Outline" />
                <span>播放器</span>
            </MenuItem>
        </Menu>
    </Sider>
    <Layout Class="site-layout">
        <Header Class="site-layout-background" Style="padding: 0;">
            <div style="display:flex;justify-content:space-between">
                <div>
                    @if (collapsed)
                    {
                        <Icon Type="menu-unfold" Theme="IconThemeType.Outline" Class="trigger" OnClick="toggle" Style="margin-left:15px;"/>
                    }
                    else
                    {
                        <Icon Type="menu-fold" Theme="IconThemeType.Outline" Class="trigger" OnClick="toggle" Style="margin-left:15px;" />
                    }
                </div>
                <div style="padding:0 15px;">
                    <AuthorizeView>
                        <Authorized>
                            <a href="/logoff">注销</a>
                        </Authorized>
                        <NotAuthorized>
                            <a  @onclick="ShowAuth">登录</a>
                            &nbsp;
                            <a href="/account/">注册</a>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            </div>
        </Header>

        <Content Class="site-layout-background" Style="margin: 24px 16px;padding: 24px; padding-top:0px; min-height: 280px; overflow-y:auto">
            @*             <Breadcrumb Style="margin: 8px 0;">
                <BreadcrumbItem>Home</BreadcrumbItem>
                <BreadcrumbItem>List</BreadcrumbItem>
                <BreadcrumbItem>App</BreadcrumbItem>
            </Breadcrumb> *@
            @Body
        </Content>
    </Layout>
</Layout>

<style>
    #components-layout-demo-custom-trigger .trigger {
    font-size: 18px;
    line-height: 64px;
    padding: 0 24px;
    cursor: pointer;
    transition: color 0.3s;
    }

    #components-layout-demo-custom-trigger .trigger:hover {
    color: #1890ff;
    }

    #components-layout-demo-custom-trigger .logo {
    height: 32px;
    background: rgba(255, 255, 255, 0.2);
    margin: 16px;
    }

    .site-layout .site-layout-background {
    background: #fff;
    }
</style>


@code {
    bool collapsed = true;

    void toggle()
    {
        collapsed = !collapsed;
    }

    private string authMessage = "The user is NOT authenticated.";

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    public  async Task ShowAuth()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;

            if (user?.Identity is not null && user.Identity.IsAuthenticated)
            {
                authMessage = $"{user.Identity.Name} is authenticated.";
            }
        }
    }

}